# Global initialisation file for SciTE
# For Linux, place in $prefix/share/scite
# For Windows, place in same directory as SciTE.EXE (or Sc1.EXE)
# Documentation at http://www.scintilla.org/SciTEDoc.html

# Globals

buffers=100
are.you.sure=0
view.whitespace=1
view.indentation.whitespace=1
view.eol=0
eol.mode=LF
line.margin.visible=1
# 4 characters' worth of line numbers in the margin
line.margin.width=4+
tabbar.visible=1
tabbar.hide.index=1
toolbar.visible=1
pathbar.visible=1
selection.multiple=1
caret.period=250
caret.width=1
selection.rectangular.switch.mouse=1
selection.additional.typing=1
selection.multipaste=1
virtual.space=1
edge.mode=1
edge.column=72
edge.colour=#595959
ensure.final.line.end=1
horizontal.scrollbar=0
code.page=65001
output.code.page=65001
font.quality=3
time.commands=1
title.full.path=1
tabsize=3
indent.size=3
use.tabs=1
indent.python.colon=1
wrap=1
output.wrap=1
wrap.style=2
wrap.aware.home.end.keys=1

# UI style
whitespace.fore=#595959
whitespace.back=#0D0D0D
selection.fore=#BFBFBF
selection.back=#1A1A1A
selection.alpha=256
selection.additional.fore=#BFBFBF
selection.additional.back=#1A1A1A
selection.additional.alpha=256
caret.fore=#E6E6E6
caret.line.back=#0D0D0D
caret.line.back.alpha=256

# Senusret colour palette
col.redlo=#9E342E
col.redhi=#A6443F
col.orangelo=#98401B
col.orangehi=#A84B24
col.yellowlo=#C98F1D
col.yellowhi=#D29B2D
col.puselo=#7DB234
col.pusehi=#95C059
col.greenlo=#528547
col.greenhi=#638A5C
col.cyanlo=#2E9E6F
col.cyanhi=#3FA67B
col.bluelo=#245BA8
col.bluehi=#3974C6
col.purplelo=#412A6F
col.purplehi=#4F3A78
col.pinklo=#99335D
col.pinkhi=#A1456B

col.white=#BFBFBF
col.silver=#999999
col.gray=#595959
col.black=#0D0D0D
col.steel=#475C6B

# Default style
style.*.32=font:Source Code Pro,size:10,fore:$(col.white),back:$(col.black),notitalics,notbold
style.*.33=fore:#E6E6E6,back:#2C2C2C
font.monospace=font:Source Code Pro,size:10

### asm

# Define SciTE settings for Assembler files (NASM)
# Originally by Black Horus blackhorus@gmx.net 2002
# Updated by Kein-Hong Man mkh@pl.jaring.my 2003-10
# Updated by Marat Dukhan (mdukhan3.at.gatech.dot.edu) 10/4/2011

# Nasm files
file.patterns.asm=*.s;*.asm

*source.patterns.asm=$(file.patterns.asm);

filter.asm=Assembler x86/x64 (asm)|$(file.patterns.asm)|

*filter.asm=$(filter.asm)

lexer.$(file.patterns.asm)=asm
lexer.$(file.patterns.as)=as

*language.assembler=Assembler|asm||

bcd_instruction=aaa aad aam aas daa das
flow_instruction=ja jae jb jbe jc jcxz je jg jge jl jle jmp jna \
	jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns jnz \
	jo jp jpe jpo js jz \
	jcxz jecxz jrcxz \
	loop loope loopne loopz loopnz \
	call ret

alu_instruction=add sub adc sbb neg cmp inc dec \
	and or xor not test \
	shl shr sal sar shld shrd rol ror rcl rcr \
	cbw cwd cwde cdq cdqe cqo \
	bsf bsr bt btc btr bts \
	idiv imul div mul bswap \
	nop

mem_instruction=lea \
	mov movsx movsxd movzx \
	xlatb bound \
	xchg xadd cmpxchg cmpxchg8b cmpxchg16b

stack_instruction=push pop pushad popad pushf popf pushfd popfd pushfq popfq

pred_instruction=seta setae setb setbe setc sete setg setge setl \
	setle setna setnae setnb setnbe setnc setne setng setnge \
	setnl setnle setno setnp setns setnz seto setp setpe setpo \
	sets setz \
	salc

flag_instruction=clc cld stc std cmc lahf sahf

cmov_instruction=cmovo cmovno cmovb cmovc cmovnae cmovae cmovnb \
	cmovnc cmove cmovz cmovne cmovnz cmovbe cmovna cmova \
	cmovnbe cmovs cmovns cmovp cmovpe cmovnp cmovpo cmovl \
	cmovnge cmovge cmovnl cmovle cmovng cmovg cmovnle

prefix_instruction=lock rep repe repz repne repnz

string_instruction=cmpsb cmpsw cmpsq \
	movsb movsw movsq \
	scasb scasw scasd scasq \
	stosb stosw stosd stosq

info_instruction=cpuid rdtsc rdtscp rdpmc xgetbv

lwp_instruction=llwpcb slwpcb lwpval lwpins

ext_instruction=crc32 popcnt lzcnt tzcnt movbe pclmulqdq rdrand

bmi1_instruction=andn bextr blsi blsmk blsr

bmi2_instruction=bzhi mulx pdep pext rorx sarx shlx shrx

tbm_instruction=blcfill blci blcic blcmsk blcs blsfill blsic t1mskc tzmsk

fpu_instruction=f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcom fcomp fcompp fdecstp \
	fdisi fdiv fdivp fdivr fdivrp feni ffree fiadd ficom ficomp fidiv \
	fidivr fild fimul fincstp finit fist fistp fisub fisubr fld fld1 \
	fldcw fldenv fldenvw fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul \
	fmulp fnclex fndisi fneni fninit fnop fnsave fnsavew fnstcw fnstenv \
	fnstenvw fnstsw fpatan fprem fptan frndint frstor frstorw fsave \
	fsavew fscale fsqrt fst fstcw fstenv fstenvw fstp fstsw fsub fsubp \
	fsubr fsubrp ftst fwait fxam fxch fxtract fyl2x fyl2xp1 \
	fsetpm fcos fldenvd fnsaved fnstenvd fprem1 frstord fsaved fsin fsincos \
	fstenvd fucom fucomp fucompp fcomi fcomip fucomi fucomip ffreep \
	fcmovb fcmove fcmovbe fcmovu fcmovnb fcmovne fcmovnbe fcmovnu

mmx_instruction=movd movq \
	paddb paddw paddd paddsb paddsw paddusb paddusw \
	psubb psubw psubd psubsb psubsw psubusb psubusw \
	pand pandn por pxor \
	pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw \
	pmaddwd pmulhw pmullw \
	psllw pslld psllq psrlw psrld psrlq psraw psrad \
	packuswb packsswb packssdw \
	punpcklbw punpcklwd punpckldq punpckhbw punpckhwd punpckhdq \
	emms

mmx2_instruction=pavgb pavgw \
	pextrw pinsrw pmovmskb \
	pmaxsw pmaxub pminsw pminub \
	pmulhuw psadbw pshufw \
	prefetchnta prefetcht0 prefetcht1 prefetcht2 \
	maskmovq movntq sfence

emmx_instruction=paddsiw psubsiw \
	pmulhrw pmachriw pmulhriw \
	pmagw pdistib paveb \
	pmvzb pmvnzb pmvlzb pmvgezb

k3d_instruction=pfacc pfadd pfsub pfsubr pfmul \
	pfcmpeq pfcmpge pfcmpgt \
	pfmax pfmin \
	pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt \
	pi2fd pf2id \
	pavgusb pmulhrw \
	femms

k3d2_instruction=pfnacc pfpnacc pi2fw pf2iw pswapd

k3dgeode_instruction=pfrsqrtv pfrcpv

k3dprefetch_instruction=prefetch prefetchw

sse_instruction=addss addps subss subps \
	mulss mulps divss divps sqrtss sqrtps \
	rcpss rcpps rsqrtss rsqrtps \
	maxss maxps minss minps \
	cmpss comiss ucomiss cmpps \
	cmpeqss cmpltss cmpless cmpunordss cmpneqss cmpnltss cmpnless cmpordss \
	cmpeqps cmpltps cmpleps cmpunordps cmpneqps cmpnltps cmpnleps cmpordps \
	andnps andps orps xorps \
	cvtsi2ss cvtss2si cvttss2si \
	cvtpi2ps cvtps2pi cvttps2pi \
	movss movlps movhps movlhps movhlps movaps movups movntps movmskps \
	shufps unpckhps unpcklps \
	ldmxcsr stmxcsr

sse2_instruction=addpd addsd subpd subsd \
	mulsd mulpd divsd divpd sqrtsd sqrtpd \
	maxsd maxpd minsd minpd \
	cmpsd comisd ucomisd cmppd \
	cmpeqsd cmpltsd cmplesd cmpunordsd cmpneqsd cmpnltsd cmpnlesd cmpordsd \
	cmpeqpd cmpltpd cmplepd cmpunordpd cmpneqpd cmpnltpd cmpnlepd cmpordpd \
	andnpd andpd orpd xorpd \
	cvtsd2ss cvtpd2ps cvtss2sd cvtps2pd \
	cvtdq2ps cvtps2dq cvttps2dq \
	cvtdq2pd cvtpd2dq cvttpd2dq \
	cvtsi2sd cvtsd2si cvttsd2si \
	cvtpi2pd cvtpd2pi cvttpd2pi \
	movsd movlpd movhpd movapd movupd movntpd movmskpd \
	shufpd unpckhpd unpcklpd \
	movnti movdqa movdqu movntdq maskmovdqu \
	movdq2q movq2dq \
	paddq psubq pmuludq \
	pslldq psrldq \
	punpcklqdq punpckhqdq \
	pshufhw pshuflw pshufd \
	lfence mfence

sse3_instruction=addsubps addsubpd \
	haddps haddpd hsubps hsubpd \
	movsldup movshdup movddup \
	lddqu \
	fisttp

ssse3_instruction=psignb psignw psignd \
	pabsb pabsw pabsd \
	palignr pshufb \
	pmulhrsw pmaddubsw \
	phaddw phaddd phaddsw \
	phsubw phsubd phsubsw

sse4a_instruction=extrq insertq \
	movntsd movntss

sse41_instruction=mpsadbw phminposuw \
	pmuldq pmulld \
	dpps dppd \
	blendps blendpd blendvps blendvpd pblendvb pblendw \
	pmaxsb pmaxuw pmaxsd pmaxud pminsb pminuw pminsd pminud \
	roundps roundss roundpd roundsd \
	insertps pinsrb pinsrd pinsrq \
	extractps pextrb pextrd pextrq \
	pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq \
	pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq \
	ptest \
	pcmpeqq \
	packusdw \
	movntdqa

sse42_instruction=pcmpgtq \
	pcmpestri pcmpestrm pcmpistri pcmpistrm

aes_instruction=aesenc aesenclast aesdec aesdeclast aeskeygenassist aesimc

padlock_instruction=xcryptcbc xcryptcfb xcryptctr xcryptecb xcryptofb \
	xsha1 xsha256 montmul xstore


avx_instruction=vaddss vaddps vaddsd vaddpd vsubss vsubps vsubsd vsubpd \
	vaddsubps vaddsubpd \
	vhaddps vhaddpd vhsubps vhsubpd \
	vmulss vmulps vmulsd vmulpd \
	vmaxss vmaxps vmaxsd vmaxpd vminss vminps vminsd vminpd \
	vandps vandpd vandnps vandnpd vorps vorpd vxorps vxorpd \
	vblendps vblendpd vblendvps vblendvpd \
	vcmpss vcomiss vucomiss vcmpsd vcomisd vucomisd vcmpps vcmppd \
	vcmpeqss vcmpltss vcmpless vcmpunordss vcmpneqss vcmpnltss vcmpnless vcmpordss \
	vcmpeq_uqss vcmpngess vcmpngtss vcmpfalsess vcmpneq_oqss vcmpgess vcmpgtss vcmptruess \
	vcmpeq_osss vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss \
	vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss \
	vcmpeqps vcmpltps vcmpleps vcmpunordps vcmpneqps vcmpnltps vcmpnleps vcmpordps \
	vcmpeq_uqps vcmpngeps vcmpngtps vcmpfalseps vcmpneq_oqps vcmpgeps vcmpgtps vcmptrueps \
	vcmpeq_osps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps \
	vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps \
	vcmpeqsd vcmpltsd vcmplesd vcmpunordsd vcmpneqsd vcmpnltsd vcmpnlesd vcmpordsd \
	vcmpeq_uqsd vcmpngesd vcmpngtsd vcmpfalsesd vcmpneq_oqsd vcmpgesd vcmpgtsd vcmptruesd \
	vcmpeq_ossd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd \
	vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd \
	vcmpeqpd vcmpltpd vcmplepd vcmpunordpd vcmpneqpd vcmpnltpd vcmpnlepd vcmpordpd \
	vcmpeq_uqpd vcmpngepd vcmpngtpd vcmpfalsepd vcmpneq_oqpd vcmpgepd vcmpgtpd vcmptruepd \
	vcmpeq_ospd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd \
	vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd \
	vcvtsd2ss vcvtpd2ps vcvtss2sd vcvtps2pd \
	vcvtsi2ss vcvtss2si vcvttss2si \
	vcvtpi2ps vcvtps2pi vcvttps2pi \
	vcvtdq2ps vcvtps2dq vcvttps2dq \
	vcvtdq2pd vcvtpd2dq vcvttpd2dq \
	vcvtsi2sd vcvtsd2si vcvttsd2si \
	vcvtpi2pd vcvtpd2pi vcvttpd2pi \
	vdivss vdivps vdivsd vdivpd vsqrtss vsqrtps vsqrtsd vsqrtpd \
	vdpps vdppd \
	vmaskmovps vmaskmovpd \
	vmovss vmovsd vmovaps vmovapd vmovups vmovupd vmovntps vmovntpd \
	vmovhlps vmovlhps vmovlps vmovlpd vmovhps vmovhpd \
	vmovsldup vmovshdup vmovddup \
	vmovmskps vmovmskpd \
	vroundss vroundps vroundsd vroundpd \
	vrcpss vrcpps vrsqrtss vrsqrtps \
	vunpcklps vunpckhps vunpcklpd vunpckhpd \
	vbroadcastss vbroadcastsd vbroadcastf128 \
	vextractps vinsertps vextractf128 vinsertf128 \
	vshufps vshufpd vpermilps vpermilpd vperm2f128 \
	vtestps vtestpd \
	vpaddb vpaddusb vpaddsb vpaddw vpaddusw vpaddsw vpaddd vpaddq \
	vpsubb vpsubusb vpsubsb vpsubw vpsubusw vpsubsw vpsubd vpsubq \
	vphaddw vphaddsw vphaddd vphsubw vphsubsw vphsubd \
	vpsllw vpslld vpsllq vpsrlw vpsrld vpsrlq vpsraw vpsrad \
	vpand vpandn vpor vpxor \
	vpblendwb vpblendw \
	vpsignb vpsignw vpsignd \
	vpavgb vpavgw \
	vpabsb vpabsw vpabsd \
	vmovd vmovq vmovdqa vmovdqu vlddqu vmovntdq vmovntdqa vmaskmovdqu \
	vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq \
	vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq \
	vpackuswb vpacksswb vpackusdw vpackssdw \
	vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq \
	vpmaddubsw vpmaddwd \
	vpmullw vpmulhuw vpmulhw vpmulhrsw vpmulld vpmuludq vpmuldq \
	vpmaxub vpmaxsb vpmaxuw vpmaxsw vpmaxud vpmaxsd \
	vpminub vpminsb vpminuw vpminsw vpminud vpminsd \
	vpmovmskb vptest \
	vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq \
	vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq \
	vpslldq vpsrldq vpalignr \
	vpshufb vpshuflw vpshufhw vpshufd \
	vpextrb vpextrw vpextrd vpextrq vpinsrb vpinsrw vpinsrd vpinsrq \
	vpsadbw vmpsadbw vphminposuw \
	vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm \
	vpclmulqdq vaesenc vaesenclast vaesdec vaesdeclast vaeskeygenassist vaesimc \
	vldmxcsr vstmxcsr vzeroall vzeroupper

avx2_instruction=vbroadcasti128 vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq \
	vpblendd \
	vpermd vpermq vperm2i128 \
	vextracti128 vinserti128 \
	vpmaskmovd vpmaskmovq \
	vpsllvd vpsllvq vpsravd vpsrlvd vpsrldq \
	vpgatherdd vpgatherqd vgatherdq vgatherqq \
	vpermps vpermpd \
	vgatherdpd vgatherqpd vgatherdps vgatherqps

xop_instruction=vfrczss vfrczps vfrczsd vfrczpd \
	vpermil2ps vperlil2pd \
	vtestps vtestpd \
	vpcomub vpcomb vpcomuw vpcomw vpcomud vpcomd vpcomuq vpcomq \
	vphaddubw vphaddbw vphaddubd vphaddbd vphaddubq vphaddbq \
	vphadduwd vphaddwd vphadduwq vphaddwq vphaddudq vphadddq \
	vphsubbw vphsubwd vphsubdq \
	vpmacsdd vpmacssdd vpmacsdql vpmacssdql vpmacsdqh vpmacssdqh \
	vpmacsww vpmacssww vpmacswd vpmacsswd \
	vpmadcswd vpmadcsswd \
	vpcmov vpperm \
	vprotb vprotw vprotd vprotq \
	vpshab vpshaw vpshad vpshaq \
	vpshlb vpshlw vpshld vpshlq

cvt16_instruction=vcvtph2ps vcvtps2ph

fma4_instruction=vfmaddss vfmaddps vfmaddsd vfmaddpd \
	vfmsubss vfmsubps vfmsubsd vfmsubpd \
	vnfmaddss vnfmaddps vnfmaddsd vnfmaddpd \
	vnfmsubss vnfmsubps vnfmsubsd vnfmsubpd \
	vfmaddsubps vfmaddsubpd vfmsubaddps vfmsubaddpd

fma3_instruction=vfmadd132ss vfmadd213ss vfmadd231ss \
	vfmadd132ps vfmadd213ps vfmadd231ps \
	vfmadd132sd vfmadd213sd vfmadd231sd \
	vfmadd132pd vfmadd213pd vfmadd231pd \
	vfmaddsub132ps vfmaddsub213ps vfmaddsub231ps \
	vfmaddsub132pd vfmaddsub213pd vfmaddsub231pd \
	vfmsubadd132ps vfmsubadd213ps vfmsubadd231ps \
	vfmsubadd132pd vfmsubadd213pd vfmsubadd231pd \
	vfmsub132ss vfmsub213ss vfmsub231ss \
	vfmsub132ps vfmsub213ps vfmsub231ps \
	vfmsub132sd vfmsub213sd vfmsub231sd \
	vfmsub132pd vfmsub213pd vfmsub231pd \
	vfnmadd132ss vfnmadd213ss vfnmadd231ss \
	vfnmadd132ps vfnmadd213ps vfnmadd231ps \
	vfnmadd132sd vfnmadd213sd vfnmadd231sd \
	vfnmadd132pd vfnmadd213pd vfnmadd231pd \
	vfnmsub132ss vfnmsub213ss vfnmsub231ss \
	vfnmsub132ps vfnmsub213ps vfnmsub231ps \
	vfnmsub132sd vfnmsub213sd vfnmsub231sd \
	vfnmsub132pd vfnmsub213pd vfnmsub231pd

register=al ah bl bh cl ch dl dh \
	ax bx cx dx si di bp \
	eax ebx ecx edx esi edi ebx esp \
	st0 st1 st2 st3 st4 st5 st6 st7 \
	mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 \
	xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 \
	ymm0 ymm1 ymm2 ymm3 ymm4 ymm5 ymm6 ymm7 \
	fs

register_64=sil dil bpl \
	r8b r9b r10b r11b r12b r13b r14b r15b \
	r8w r9w r10w r11w r12w r13w r14w r15w \
	rax rcx rdx rbx rsp rbp rsi rdi \
	r8 r9 r10 r11 r12 r13 r14 r15 \
	xmm8 xmm9 xmm10 xmm11 xmm12 xmm13 xmm14 xmm15 \
	ymm8 ymm9 ymm10 ymm11 ymm12 ymm13 ymm14 ymm15 \
	gs

directive_nasm=db dw dd dq dt do dy \
	resb resw resd resq rest reso resy incbin equ times safeseh \
	__utf16__ __utf32__ %+ \
	default cpu float start imagebase osabi \
	..start ..imagebase ..gotpc ..gotoff ..gottpoff ..got ..plt ..sym ..tlsie \
	section segment __sect__ group absolute \
	.bss .comment .data .lbss .ldata .lrodata .rdata .rodata .tbss .tdata .text \
	alloc bss code exec data noalloc nobits noexec nowrite progbits rdata tls write \
	private public common stack overlay class \
	extern global common import export \
	%define %idefine %xdefine %ixdefine %assign %undef %? %?? \
	%defstr %idefstr %deftok %ideftok \
	%strcat %strlen %substr \
	%macro %imacro %rmacro %exitmacro %endmacro %unmacro \
	%if %ifn %elif %elifn %else %endif \
	%ifdef %ifndef %elifdef %elifndef \
	%ifmacro %ifnmacro %elifmacro %elifnmacro \
	%ifctx %ifnctx %elifctx %elifnctx \
	%ifidn %ifnidn %elifidn %elifnidn \
	%ifidni %ifnidni %elifidni %elifnidni \
	%ifid %ifnid %elifid %elifnid \
	%ifnum %ifnnum %elifnum %elifnnum \
	%ifstr %ifnstr %elifstr %elifnstr \
	%iftoken %ifntoken %eliftoken %elifntoken \
	%ifempty %elifempty %ifnempty %elifnempty \
	%ifenv %ifnenv %elifenv %elifnenv \
	%rep %exitrep %endrep \
	%while %exitwhile %endwhile \
	%include %pathsearch %depend %use \
	%push %pop %repl %arg %local %stacksize flat flat64 large small \
	%error %warning %fatal \
	%00 .nolist %rotate %line %! %final %clear \
	struc endstruc istruc at iend \
	align alignb sectalign \
	bits use16 use32 use64 \
	__nasm_major__ __nasm_minor__ __nasm_subminor__ ___nasm_patchlevel__ \
	__nasm_version_id__ __nasm_ver__ \
	__file__ __line__ __pass__ __bits__ __output_format__ \
	__date__ __time__ __date_num__ __time_num__ __posix_time__ \
	__utc_date__ __utc_time__ __utc_date_num__ __utc_time_num__ \
	__float_daz__ __float_round__ __float__ \
	__use_altreg__ altreg \
	__use_smartalign__ smartalign __alignmode__ \
	__use_fp__ __infinity__ __nan__ __qnan__ __snan__ \
	__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__

directive_operand_nasm=a16 a32 a64 o16 o32 o64 strict \
	byte word dword qword tword oword yword nosplit \
	%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 \
	abs rel \
	$ $$ \
	seg wrt

keywords.$(file.patterns.asm)=$(bcd_instruction) $(flow_instruction) $(alu_instruction) $(mem_instruction) $(stack_instruction) $(pred_instruction) $(flag_instruction) $(cmov_instruction) $(prefix_instruction) $(string_instruction) $(info_instruction) $(lwp_instruction) $(ext_instruction) $(bmi1_instruction) $(bmi2_instruction)
keywords2.$(file.patterns.asm)=$(fpu_instruction)
keywords3.$(file.patterns.asm)=$(register) $(register_64)
keywords4.$(file.patterns.asm)=$(directive_nasm)
keywords5.$(file.patterns.asm)=$(directive_operand_nasm)
keywords6.$(file.patterns.asm)=$(mmx_instruction) $(mmx2_instruction) $(emmx_instruction) $(k3d_instruction) $(k3d2_instruction) $(k3dgeode_instruction) $(k3dprefetch_instruction) $(sse_instruction) $(sse2_instruction) $(sse3_instruction) $(ssse3_instruction) $(sse4a_instruction) $(sse41_instruction) $(sse42_instruction) $(aes_instruction) $(padlock_instruction) $(avx_instruction) $(avx2_instruction) $(xop_instruction) $(cvt16_instruction) $(fma4_instruction) $(fma3_instruction)

keywords.$(file.patterns.as)=$(bcd_instruction) $(flow_instruction) $(alu_instruction) $(mem_instruction) $(stack_instruction) $(pred_instruction) $(flag_instruction) $(cmov_instruction) $(prefix_instruction) $(string_instruction) $(info_instruction) $(lwp_instruction) $(ext_instruction) $(bmi1_instruction) $(bmi2_instruction)
keywords2.$(file.patterns.as)=$(fpu_instruction)
keywords3.$(file.patterns.as)=$(register) $(register_64)
keywords4.$(file.patterns.as)=$(directive_nasm)
keywords5.$(file.patterns.as)=$(directive_operand_nasm)
keywords6.$(file.patterns.as)=$(mmx_instruction) $(mmx2_instruction) $(emmx_instruction) $(k3d_instruction) $(k3d2_instruction) $(k3dgeode_instruction) $(k3dprefetch_instruction) $(sse_instruction) $(sse2_instruction) $(sse3_instruction) $(ssse3_instruction) $(sse4a_instruction) $(sse41_instruction) $(sse42_instruction) $(aes_instruction) $(padlock_instruction) $(avx_instruction) $(avx2_instruction) $(xop_instruction) $(cvt16_instruction) $(fma4_instruction) $(fma3_instruction)

comment.block.asm=;
comment.block.as=#


# Assembler Styles
#style.asm.32=fore:#808080,font:Verdana,size:8
#style.as.32=$(style.asm.32)
# Default
style.asm.0=
style.as.0=$(style.asm.0)
# Comment
style.asm.1=fore:$(col.gray)
style.as.1=$(style.asm.1)
#$(colour.code.comment.line),font:Comic Sans MS,size:8
# Number
style.asm.2=fore:$(col.bluehi)
style.as.2=$(style.asm.2)
# String
style.asm.3=fore:$(col.redlo)
style.as.3=$(style.asm.3)
# Operator
style.asm.4=fore:$(col.silver)
style.as.4=$(style.asm.4)
# Identifier
style.asm.5=
style.as.5=$(style.asm.5)
# CPU instruction
style.asm.6=fore:$(col.bluelo)
style.as.6=$(style.asm.6)
# FPU instruction
style.asm.7=fore:$(col.bluehi)
style.as.7=$(style.asm.7)
# Register
style.asm.8=fore:$(col.cyanlo)
style.as.8=$(style.asm.8)
# assembler Directive
style.asm.9=fore:$(col.bluehi)
style.as.9=$(style.asm.9)
# assembler Directive Operand
style.asm.10=fore:$(col.white)
style.as.10=$(style.asm.10)
# Comment block (GNU as /*...*/ syntax, unimplemented)
style.asm.11=fore:$(col.gray)
style.as.11=$(style.asm.11)
# Character/String (single quote) (also character prefix in GNU as)
style.asm.12=fore:$(col.redhi)
style.as.12=$(style.asm.12)
# End of line where string is not closed
style.asm.13=fore:$(col.white),back:$(col.redhi),eolfilled
style.as.13=$(style.asm.13)
# Extended instructions
style.asm.14=fore:$(col.bluehi)
style.as.14=$(style.asm.14)
# Comment directive
style.asm.15=fore:$(col.gray)
style.as.15=$(style.asm.15)

### conf

# Define SciTE settings for Apache Configuration files.
# contributed by Ahmad Zawawi <zeus_go64@hotmail.com>

file.patterns.conf=*.conf;.htaccess
*source.patterns.conf=$(file.patterns.conf);
filter.conf=Apache Conf (conf)|$(file.patterns.conf)|
*filter.apacheconfig=$(filter.conf)
lexer.$(file.patterns.conf)=conf
#*language.apacheconfig=Apache Confi&g|conf||
# for future implemention...
#api.$(file.patterns.conf)=conf.api

# Keywords for Apache's Runtime directives
keywords.$(file.patterns.conf)=\
acceptmutex acceptpathinfo accessconfig accessfilename \
action addalt addaltbyencoding addaltbytype addcharset \
adddefaultcharset adddescription addencoding \
addhandler addicon addiconbyencoding addiconbytype \
addinputfilter addlanguage addmodule addmoduleinfo \
addoutputfilter addoutputfilterbytype addtype agentlog \
alias aliasmatch all allow allowconnect \
allowencodedslashes allowoverride anonymous \
anonymous_authoritative anonymous_logemail \
anonymous_mustgiveemail anonymous_nouserid \
anonymous_verifyemail assignuserid authauthoritative \
authdbauthoritative authdbgroupfile \
authdbmauthoritative authdbmgroupfile authdbmtype \
authdbmuserfile authdbuserfile authdigestalgorithm \
authdigestdomain authdigestfile authdigestgroupfile \
authdigestnccheck authdigestnonceformat \
authdigestnoncelifetime authdigestqop \
authdigestshmemsize authgroupfile \
authldapauthoritative authldapbinddn \
authldapbindpassword authldapcharsetconfig \
authldapcomparednonserver authldapdereferencealiases \
authldapenabled authldapfrontpagehack \
authldapgroupattribute authldapgroupattributeisdn \
authldapremoteuserisdn authldapurl authname authtype \
authuserfile bindaddress browsermatch \
browsermatchnocase bs2000account bufferedlogs \
cachedefaultexpire cachedirlength cachedirlevels \
cachedisable cacheenable cacheexpirycheck cachefile \
cacheforcecompletion cachegcclean cachegcdaily \
cachegcinterval cachegcmemusage cachegcunused \
cacheignorecachecontrol cacheignoreheaders \
cacheignorenolastmod cachelastmodifiedfactor \
cachemaxexpire cachemaxfilesize cacheminfilesize \
cachenegotiateddocs cacheroot cachesize \
cachetimemargin cgimapextension charsetdefault \
charsetoptions charsetsourceenc checkspelling \
childperuserid clearmodulelist contentdigest \
cookiedomain cookieexpires cookielog cookiename \
cookiestyle cookietracking coredumpdirectory customlog \
dav davdepthinfinity davlockdb davmintimeout \
defaulticon defaultlanguage defaulttype define \
deflatebuffersize deflatecompressionlevel \
deflatefilternote deflatememlevel deflatewindowsize \
deny directory directoryindex directorymatch \
directoryslash documentroot dumpioinput dumpiooutput \
enableexceptionhook enablemmap enablesendfile \
errordocument errorlog example expiresactive \
expiresbytype expiresdefault extendedstatus \
extfilterdefine extfilteroptions fancyindexing \
fileetag files filesmatch forcelanguagepriority \
forcetype forensiclog from group header headername \
hostnamelookups identitycheck ifdefine ifmodule \
imapbase imapdefault imapmenu include indexignore \
indexoptions indexorderdefault isapiappendlogtoerrors \
isapiappendlogtoquery isapicachefile isapifakeasync \
isapilognotsupported isapireadaheadbuffer keepalive \
keepalivetimeout languagepriority ldapcacheentries \
ldapcachettl ldapconnectiontimeout ldapopcacheentries \
ldapopcachettl ldapsharedcachefile ldapsharedcachesize \
ldaptrustedca ldaptrustedcatype limit limitexcept \
limitinternalrecursion limitrequestbody \
limitrequestfields limitrequestfieldsize \
limitrequestline limitxmlrequestbody listen \
listenbacklog loadfile loadmodule location \
locationmatch lockfile logformat loglevel maxclients \
maxkeepaliverequests maxmemfree maxrequestsperchild \
maxrequestsperthread maxspareservers maxsparethreads \
maxthreads maxthreadsperchild mcachemaxobjectcount \
mcachemaxobjectsize mcachemaxstreamingbuffer \
mcacheminobjectsize mcacheremovalalgorithm mcachesize \
metadir metafiles metasuffix mimemagicfile \
minspareservers minsparethreads mmapfile \
modmimeusepathinfo multiviewsmatch namevirtualhost \
nocache noproxy numservers nwssltrustedcerts \
nwsslupgradeable options order passenv pidfile port \
protocolecho proxy proxybadheader proxyblock \
proxydomain proxyerroroverride proxyiobuffersize \
proxymatch proxymaxforwards proxypass proxypassreverse \
proxypreservehost proxyreceivebuffersize proxyremote \
proxyremotematch proxyrequests proxytimeout proxyvia \
qsc readmename redirect redirectmatch \
redirectpermanent redirecttemp refererignore \
refererlog removecharset removeencoding removehandler \
removeinputfilter removelanguage removeoutputfilter \
removetype requestheader require resourceconfig \
rewritebase rewritecond rewriteengine rewritelock \
rewritelog rewriteloglevel rewritemap rewriteoptions \
rewriterule rlimitcpu rlimitmem rlimitnproc satisfy \
scoreboardfile script scriptalias scriptaliasmatch \
scriptinterpretersource scriptlog scriptlogbuffer \
scriptloglength scriptsock securelisten sendbuffersize \
serveradmin serveralias serverlimit servername \
serverpath serverroot serversignature servertokens \
servertype setenv setenvif setenvifnocase sethandler \
setinputfilter setoutputfilter singlelisten ssiendtag \
ssierrormsg ssistarttag ssitimeformat ssiundefinedecho \
sslcacertificatefile sslcacertificatepath \
sslcarevocationfile sslcarevocationpath \
sslcertificatechainfile sslcertificatefile \
sslcertificatekeyfile sslciphersuite sslengine \
sslmutex ssloptions sslpassphrasedialog sslprotocol \
sslproxycacertificatefile sslproxycacertificatepath \
sslproxycarevocationfile sslproxycarevocationpath \
sslproxyciphersuite sslproxyengine \
sslproxymachinecertificatefile \
sslproxymachinecertificatepath sslproxyprotocol \
sslproxyverify sslproxyverifydepth sslrandomseed \
sslrequire sslrequiressl sslsessioncache \
sslsessioncachetimeout sslusername sslverifyclient \
sslverifydepth startservers startthreads \
suexecusergroup threadlimit threadsperchild \
threadstacksize timeout transferlog typesconfig \
unsetenv usecanonicalname user userdir \
virtualdocumentroot virtualdocumentrootip virtualhost \
virtualscriptalias virtualscriptaliasip \
win32disableacceptex xbithack

#common parameters for Apache runtime configuration
keywords2.$(file.patterns.conf)=\
on off standalone inetd \
force-response-1.0 downgrade-1.0 nokeepalive \
indexes includes followsymlinks none \
x-compress x-gzip

# whitespace (SCE_CONF_DEFAULT)
style.conf.0=
# Comment (SCE_CONF_COMMENT)
style.conf.1=fore:$(col.gray)
# Number (SCE_CONF_NUMBER)
style.conf.2=fore:$(col.bluehi)
# identifier (SCE_CONF_IDENTIFIER)
style.conf.9=
# extensions (like .gz, .tgz, .html) (SCE_CONF_EXTENSION)
style.conf.4=
# parameters for Apache Runtime directives (SCE_CONF_PARAMETER)
style.conf.5=
# Double quoted string (SCE_CONF_STRING)
style.conf.6=fore:$(col.redlo)
# Operators (SCE_CONF_OPERATOR)
style.conf.7=
# IP address (SCE_CONF_IP)
style.conf.8=fore:$(col.yellowhi)
# Apache Runtime Directive (SCE_CONF_DIRECTIVE)
style.conf.3=

### cpp

# Define SciTE settings for C++, C, C#, Ch, Java, IDL, JavaScript, Flash (ActionScript 2) files.

# sma files are Small script (C-like)
file.patterns.cpp=*.c;*.cc;*.cpp;*.cxx;*.h;*.hh;*.hpp;*.hxx;*.ipp;*.m;*.mm;*.sma;*.cst;*.hst
file.patterns.cplusplus=*.cc;*.cpp;*.cxx
# jad = decompiled class files; pde = Processing.org sketch files
file.patterns.java=*.java;*.jad;*.pde
# pln, inc and t are SilkTest (4Test) files.
file.patterns.test=*.pln;*.inc;*.t
# es = JS dialect of Abobe for SVG
file.patterns.js=*.js;*.es;*.ts
file.patterns.cs=*.cs
file.patterns.rc=*.rc;*.rc2;*.dlg
file.patterns.idl=*.idl;*.odl
file.patterns.flash=*.as;*.asc;*.jsfl
file.patterns.ch=*.ch;*.chf;*.chs
file.patterns.vala=*.vala
file.patterns.go=*.go
file.patterns.pike=*.pike
file.patterns.swift=*.swift
file.patterns.c.like=$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.idl);$(file.patterns.java);$(file.patterns.js);$(file.patterns.flash);$(file.patterns.ch);$(file.patterns.vala);$(file.patterns.pike)
file.patterns.meson=meson.build

*source.patterns.cpp=$(file.patterns.c.like);
*source.patterns.resource=$(file.patterns.rc);*.def;

shbang.tcc=cpp
shbang.tinycc=cpp

filter.cpp=C/C++ (c cc cpp cxx cs vala h hh hxx hpp ipp dlg rc rc2 mak)|\
$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.rc);$(file.patterns.vala);*.mak;make*|
filter.java=Java (java)|*.java|
filter.js=JavaScript (js es ts)|$(file.patterns.js)|
filter.idl=IDL (idl odl)|$(file.patterns.idl)|
filter.test=SilkTest (pln inc t)|$(file.patterns.test)|
filter.flash=Flash (as asc jsfl)|$(file.patterns.flash)|
filter.ch=Ch (ch chf chs)|$(file.patterns.ch)|
filter.go=Go (go)|$(file.patterns.go)|
filter.pike=Pike (pike)|$(file.patterns.pike)|
filter.swift=Swift (swift)|$(file.patterns.swift)|

*filter.cpp=$(filter.cpp)
*filter.java=$(filter.java)
*filter.javascript=$(filter.js)
*filter.idl=$(filter.idl)

lexer.$(file.patterns.java)=cpp
lexer.$(file.patterns.cpp)=cpp
lexer.$(file.patterns.rc)=cpp
lexer.$(file.patterns.idl)=cpp
lexer.$(file.patterns.cs)=cpp
lexer.$(file.patterns.js)=cpp
lexer.$(file.patterns.test)=cpp
lexer.$(file.patterns.flash)=cpp
lexer.$(file.patterns.ch)=cpp
lexer.$(file.patterns.vala)=cpp
lexer.$(file.patterns.go)=cpp
lexer.$(file.patterns.pike)=cpp
lexer.$(file.patterns.swift)=cpp
lexer.$(file.patterns.meson)=cpp

*language.c=&C / C++|c||
*language.csharp=C&#|cs||
*language.java=&Java|java||
*language.javascript=Java&Script|js||
#*language.resource=Reso&urce|rc||

keywordclass.cpp=alignas alignof and and_eq asm auto bitand bitor bool break \
case catch char char16_t char32_t class compl const constexpr const_cast continue \
decltype default delete do double dynamic_cast else enum explicit export extern false final float for \
friend goto if inline int long mutable namespace new noexcept not not_eq nullptr \
operator or or_eq override private protected public \
register reinterpret_cast return short signed sizeof static static_assert static_cast struct switch \
template this thread_local throw true try typedef typeid typename union unsigned using \
virtual void volatile wchar_t while xor xor_eq

directives.objective.c=\
@class @defs @protocol @required @optional @end \
@interface @public @package @protected @private @property \
@implementation @synthesize @dynamic \
@throw @try @catch @finally \
@synchronized @autoreleasepool \
@selector @encode \
@compatibility_alias

# Since Objective C and C++ share the .h extension, allow Objective C directives as keywords
# For stricter display of pure C++, specify keywords.$(file.patterns.cpp)=$(keywordclass.cpp)
keywords.$(file.patterns.cpp)=$(keywordclass.cpp) $(directives.objective.c)

# keywords2 is for highlighting user defined keywords or function calls or similar
#keywords2.$(file.patterns.cpp)=file

# keywords3 is for doc comment keywords, highlighted in style 17
#CPP doxygen
file.patterns.doxygen.langs=$(file.patterns.cpp);$(file.patterns.java)
keywordclass.doxygen=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param param[in] param[out] \
post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw throws todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }
keywords3.$(file.patterns.doxygen.langs)=$(keywordclass.doxygen)

# keywords5 is for preprocessor definitions and will cause inactive code
# to be greyed out. This setting is a space separated list of definitions
# where a definition may be of the form NAME=VALUE or simply NAME.
#keywords5.$(file.patterns.cpp)=_MSC_VER SCI_NAMESPACE GTK_MAJOR_VERSION=2

word.chars.cxx=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.cpp)=$(word.chars.cxx)
calltip.cpp.word.characters=$(chars.alpha)$(chars.numeric)_
comment.block.cpp=//~
#comment.block.at.line.start.cpp=1
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/*
comment.box.middle.cpp= *
comment.box.end.cpp= */

# Folding
#fold.cpp.syntax.based=0
#fold.comment=0
#fold.cpp.comment.multiline=0
#fold.cpp.comment.explicit=0
#defaults for fold.cpp.explicit.start=//{ and fold.cpp.explicit.end=//}
#  can be replaced by defining custom strings, e.g. //[ and //]
#fold.cpp.explicit.start=//[
#fold.cpp.explicit.end=//]
#if fold strings are set to something like /*{{{ and /*}}} (Origami/WinF style fold strings), enable
#  fold.cpp.explicit.anywhere, allowing explicit fold points being anywhere, not just in line comments
#fold.cpp.explicit.anywhere=1
#fold.preprocessor=1
#fold.compact=1
#fold.at.else=1

file.patterns.c.except.cpp=$(file.patterns.cs);$(file.patterns.idl);*.java;$(file.patterns.flash);$(file.patterns.ch)
statement.indent.$(file.patterns.c.except.cpp)=5 case default do else for if while
statement.indent.$(file.patterns.cpp)=5 case default do else for if private protected public while
statement.end.$(file.patterns.c.like)=10 ;
statement.lookback.$(file.patterns.c.like)=20
block.start.$(file.patterns.c.like)=10 {
block.end.$(file.patterns.c.like)=10 }

#autocomplete.cpp.fillups=(

#styling.within.preprocessor=1
preprocessor.symbol.$(file.patterns.cpp)=#
preprocessor.start.$(file.patterns.cpp)=if ifdef ifndef
preprocessor.middle.$(file.patterns.cpp)=else elif
preprocessor.end.$(file.patterns.cpp)=endif

preprocessor.symbol.$(file.patterns.cs)=#
preprocessor.start.$(file.patterns.cs)=if region
preprocessor.middle.$(file.patterns.cs)=else elif
preprocessor.end.$(file.patterns.cs)=endif endregion

keywordclass.ch=\
auto array bool break case char class complex ComplexInf ComplexNaN \
const continue default delete \
do double else enum export extern float for foreach goto if Inf inline int \
long namespace NaN new NULL private public register restrict return short \
signed sizeof static string_t struct switch this typedef union unsigned \
using void volatile wchar_t while __declspec
keywords.$(file.patterns.ch)=$(keywordclass.ch)
word.chars.ch=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.ch)=$(word.chars.cxx)
comment.block.ch=//~
#comment.block.at.line.start.ch=1
comment.stream.start.ch=/*
comment.stream.end.ch=*/
comment.box.start.ch=/*
comment.box.middle.ch= *
comment.box.end.ch= */
preprocessor.symbol.$(file.patterns.ch)=#
preprocessor.start.$(file.patterns.ch)=if ifdef ifndef
preprocessor.middle.$(file.patterns.ch)=else elif
preprocessor.end.$(file.patterns.ch)=endif

keywordclass.cs=abstract as ascending base bool break by byte case catch char checked \
class const continue decimal default delegate descending do double else enum \
equals event explicit extern false finally fixed float for foreach from goto group if \
implicit in int interface internal into is join lock let long namespace new null \
object on operator orderby out override params private protected public \
readonly ref return sbyte sealed select short sizeof stackalloc static \
string struct switch this throw true try typeof uint ulong \
unchecked unsafe ushort using var virtual void volatile where while
keywords.$(file.patterns.cs)=$(keywordclass.cs)
word.characters.$(file.patterns.cs)=$(word.chars.cxx)

keywordclass.go=\
bool byte break case chan complex64 complex128 const continue defer default  \
else  for func go goto fallthrough false float32 float64 if import int interface int8 int16 int32 int64 \
len map nil package range return select string struct switch true type \
uint uintptr uint8 uint16 uint32 uint64  var
keywords.$(file.patterns.go)=$(keywordclass.go)

keywordclass.rc=\
ACCELERATORS ALT AUTO3STATE AUTOCHECKBOX AUTORADIOBUTTON \
BEGIN BITMAP BLOCK BUTTON CAPTION CHARACTERISTICS CHECKBOX CLASS \
COMBOBOX CONTROL CTEXT CURSOR DEFPUSHBUTTON DIALOG DIALOGEX DISCARDABLE \
EDITTEXT END EXSTYLE FONT GROUPBOX ICON LANGUAGE LISTBOX LTEXT \
MENU MENUEX MENUITEM MESSAGETABLE POPUP \
PUSHBUTTON RADIOBUTTON RCDATA RTEXT SCROLLBAR SEPARATOR SHIFT STATE3 \
STRINGTABLE STYLE TEXTINCLUDE VALUE VERSION VERSIONINFO VIRTKEY
keywords.$(file.patterns.rc)=$(keywordclass.rc)

keywordclass.idl=\
aggregatable allocate appobject arrays async async_uuid \
auto_handle \
bindable boolean broadcast byte byte_count \
call_as callback char coclass code comm_status \
const context_handle context_handle_noserialize \
context_handle_serialize control cpp_quote custom \
decode default defaultbind defaultcollelem \
defaultvalue defaultvtable dispinterface displaybind dllname \
double dual \
enable_allocate encode endpoint entry enum error_status_t \
explicit_handle \
fault_status first_is float \
handle_t heap helpcontext helpfile helpstring \
helpstringcontext helpstringdll hidden hyper \
id idempotent ignore iid_as iid_is immediatebind implicit_handle \
import importlib in include in_line int __int64 __int3264 interface \
last_is lcid length_is library licensed local long \
max_is maybe message methods midl_pragma \
midl_user_allocate midl_user_free min_is module ms_union \
ncacn_at_dsp ncacn_dnet_nsp ncacn_http ncacn_ip_tcp \
ncacn_nb_ipx ncacn_nb_nb ncacn_nb_tcp ncacn_np \
ncacn_spx ncacn_vns_spp ncadg_ip_udp ncadg_ipx ncadg_mq \
ncalrpc nocode nonbrowsable noncreatable nonextensible notify \
object odl oleautomation optimize optional out out_of_line \
pipe pointer_default pragma properties propget propput propputref \
ptr public \
range readonly ref represent_as requestedit restricted retval \
shape short signed size_is small source strict_context_handle \
string struct switch switch_is switch_type \
transmit_as typedef \
uidefault union unique unsigned user_marshal usesgetlasterror uuid \
v1_enum vararg version void wchar_t wire_marshal

keywordclass.msidl=handle
keywordclass.xpidl=attribute native noscript scriptable shared wstring inout
keywords.$(file.patterns.idl)=$(keywordclass.idl) $(keywordclass.xpidl)

# http://java.sun.com/docs/books/tutorial/java/nutsandbolts/_keywords.html
keywordclass.java=abstract assert boolean break byte case catch char class \
const continue default do double else enum extends final finally float for \
goto if implements import instanceof int interface long \
native new package private protected public \
return short static strictfp super switch synchronized this throw throws \
transient try var void volatile while
keywords.$(file.patterns.java)=$(keywordclass.java)

keywordclass.javascript=abstract boolean break byte case catch char class \
const continue debugger default delete do double else enum export extends \
final finally float for function goto if implements import in instanceof \
int interface long native new package private protected public \
return short static super switch synchronized this throw throws \
transient try typeof var void volatile while with
keywords.$(file.patterns.js)=$(keywordclass.javascript)

keywordclass.flash=add and break case catch class continue default delete do \
dynamic else eq extends false finally for function ge get gt if implements import in \
instanceof interface intrinsic le lt ne new not null or private public return \
set static super switch this throw true try typeof undefined var void while with

keywordclass2.flash=Array Arguments Accessibility Boolean Button Camera Color \
ContextMenu ContextMenuItem Date Error Function Key LoadVars LocalConnection Math \
Microphone Mouse MovieClip MovieClipLoader NetConnection NetStream Number Object \
PrintJob Selection SharedObject Sound Stage String StyleSheet System TextField \
TextFormat TextSnapshot Video Void XML XMLNode XMLSocket \
_accProps _focusrect _global _highquality _parent _quality _root _soundbuftime \
arguments asfunction call capabilities chr clearInterval duplicateMovieClip \
escape eval fscommand getProperty getTimer getURL getVersion gotoAndPlay gotoAndStop \
ifFrameLoaded Infinity -Infinity int isFinite isNaN length loadMovie loadMovieNum \
loadVariables loadVariablesNum maxscroll mbchr mblength mbord mbsubstring MMExecute \
NaN newline nextFrame nextScene on onClipEvent onUpdate ord parseFloat parseInt play \
prevFrame prevScene print printAsBitmap printAsBitmapNum printNum random removeMovieClip \
scroll set setInterval setProperty startDrag stop stopAllSounds stopDrag substring \
targetPath tellTarget toggleHighQuality trace unescape unloadMovie unLoadMovieNum updateAfterEvent

keywords.$(file.patterns.flash)=$(keywordclass.flash)
keywords2.$(file.patterns.flash)=$(keywordclass2.flash)

keywordclass.vala=if else switch case default break continue return yield for foreach in \
do while try catch finally throw

keywordclass2.vala=namespace interface class struct enum delegate signal errordomain \
construct get set value base const static var dynamic weak unowned virtual abstract \
override public protected private extern throws requires ensures yields out ref lock \
using true false null delete generic new this typeof sizeof as owned int string char bool

keywords.$(file.patterns.vala)=$(keywordclass.vala)
keywords2.$(file.patterns.vala)=$(keywordclass2.vala)

keywordclass.pike=constant enum if do for while else foreach case switch break continue \
return typeof catch class lambda import inherit static void int string float mixed object \
function program array mapping multiset
keywords.$(file.patterns.pike)=$(keywordclass.pike)

keywordclass.swift.declarations=class deinit enum extension func import init \
internal let operator private protocol public static struct subscript typealias var
keywordclass.swift.statements=break case continue default do else fallthrough \
for if in return switch where while
keywordclass.swift.expressions=as dynamicType false is nil self Self super \
true __COLUMN__ __FILE__ __FUNCTION__ __LINE__
# The contextual keywords are only keywords in particular contexts
keywordclass.swift.contextual=associativity convenience dynamic didSet final get \
infix inout lazy left mutating none nonmutating optional override postfix \
precedence prefix Protocol required right set Type unowned weak willSet

keywords.$(file.patterns.swift)=$(keywordclass.swift.declarations) \
$(keywordclass.swift.statements) $(keywordclass.swift.expressions) \
$(keywordclass.swift.contextual)

keywords.$(file.patterns.meson)=if else elif endif
keywords2.$(file.patterns.meson)=import meson project \
executable static_library shared_library dependencies \
include_directories get_option get_compiler get_id compile_resources \
cpp_args link_args override_options name_prefix link_with

# Substyles can be used for extra lists of highlighted identifiers and doc comment keywords
# Identifiers
#substyles.cpp.11=2
#substylewords.11.1.$(file.patterns.cpp)=std map string vector
#style.cpp.11.1=fore:#EE00AA
#style.cpp.75.1=$(style.cpp.75),fore:#BB6666
# Doc comment keywords
#substyles.cpp.17=1
#style.cpp.17.1=$(style.cpp.17),fore:#00AAEE
#style.cpp.81.1=$(style.cpp.81),fore:#6699AA
#substylewords.17.1.$(file.patterns.cpp)=check

# Markers
# keywords6.$(file.patterns.c.like)=FIXME TODO XXX HACK UnresolvedMergeConflict UNDONE

#styling.within.preprocessor=1
#lexer.cpp.allow.dollars=1
#lexer.cpp.track.preprocessor=1
#lexer.cpp.update.preprocessor=1
# For C# leave lexer.cpp.verbatim.strings.allow.escapes as 0 but change to 1 for Objective C
#lexer.cpp.verbatim.strings.allow.escapes=1
#lexer.cpp.triplequoted.strings=1
#lexer.cpp.hashquoted.strings=1
#lexer.cpp.backquoted.strings=1
#lexer.cpp.escape.sequence=1

#lexer.cpp.escape.sequence=1

# C++ styles
# Comment: /* */.
style.cpp.1=fore:$(col.gray)
# Line Comment: //.
style.cpp.2=fore:$(col.gray)
# Doc comment: block comments beginning with /** or /*!
style.cpp.3=fore:$(col.steel)
# Number
style.cpp.4=fore:$(col.bluehi)
# Keyword
style.cpp.5=fore:$(col.bluelo)
# Double quoted string
style.cpp.6=fore:$(col.redlo)
# Single quoted string
style.cpp.7=fore:$(col.redhi)
# UUIDs (only in IDL)
style.cpp.8=fore:$(col.orangehi)
# Preprocessor
style.cpp.9=fore:$(col.bluehi)
# Operators
style.cpp.10=fore:$(col.silver)
# Identifiers
style.cpp.11=
# End of line where string is not closed
style.cpp.12=fore:$(col.white),back:$(col.redhi),eolfilled
# Verbatim strings for C#
style.cpp.13=fore:$(col.redhi)
# Regular expressions for JavaScript
style.cpp.14=fore:$(col.redlo)
# Doc Comment Line: line comments beginning with /// or //!.
style.cpp.15=fore:$(col.steel)
# Keywords2
style.cpp.16=fore:$(col.bluelo)
# Comment keyword
style.cpp.17=fore:$(col.cyanlo)
# Comment keyword error
style.cpp.18=fore:$(col.steel)
# Global class
style.cpp.19=fore:$(col.yellowlo)
# Raw strings for C++0x
style.cpp.20=fore:$(col.redhi)
# Triple-quoted strings for Vala
style.cpp.21=fore:$(col.redhi)
# Hash-quoted strings for Pike
style.cpp.22=fore:$(col.redhi)
# Preprocessor stream comment
style.cpp.23=fore:$(col.gray)
# Preprocessor stream doc comment
style.cpp.24=fore:$(col.steel)
# User defined literals
style.cpp.25=fore:$(col.yellowhi)
# Task Marker
style.cpp.26=fore:$(col.gray)
# Escape sequence
style.cpp.27=fore:$(col.redhi)

### html

# Define SciTE settings for HTML files.

# vxml added by lseredi

file.patterns.web=*.html;*.htm;*.asp;*.shtml;*.htd;*.jsp;*.xhtml
file.patterns.php=*.php3;*.phtml;*.php
file.patterns.html=$(file.patterns.web);$(file.patterns.php);*.htt;*.cfm;*.tpl;*.dtd;*.hta
file.patterns.vxml=*.vxml
file.patterns.xml=*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf
file.patterns.docbook=*.docbook

# *.mak also used for makefiles so don't include by default.
#file.patterns.mako=*.mak;*.mako
file.patterns.mako=*.mako

*source.patterns.cgi=*.cgi;
*source.patterns.html=$(file.patterns.web);
*source.patterns.xml=$(file.patterns.xml);

lexer.$(file.patterns.html)=hypertext
lexer.$(file.patterns.vxml)=hypertext
lexer.$(file.patterns.xml)=xml
lexer.$(file.patterns.docbook)=hypertext
lexer.$(file.patterns.mako)=hypertext

filter.web=Web (html htm asp shtml css xml docbook jsp)|$(file.patterns.web);*.css;*.xml;*.docbook|
filter.php=PHP (php php3 phtml)|$(file.patterns.php)|

*filter.web=$(filter.web)
*filter.php=$(filter.php)

*language.html=H&ypertext|html|$(keyHTML)|
*language.php=P&HP|php||
*language.xml=&XML|xml|$(keyXML)|

fold.html=1
#fold.html.preprocessor=0
#fold.hypertext.comment=1
#fold.hypertext.heredoc=1

#Default Language=1 for JS, 2 for VBS.
#asp.default.language=2
#html.tags.case.sensitive=1

#lexer.html.django=1
#lexer.html.mako=1

#xml.auto.close.tags=1
#lexer.xml.allow.scripts=0

# All hypertext elements and attributes must be listed in lower case
hypertext.elements=\
a abbr acronym address applet area b base basefont \
bdo bgsound big blink blockquote body br button caption center \
cite code col colgroup dd del dfn dir div dl dt em \
fieldset font form frame frameset h1 h2 h3 h4 h5 h6 \
head hr html i iframe img input ins isindex kbd label \
legend li link listing map marquee menu menuitem meta multicol nobr noembed noframes noscript \
object ol optgroup option p param plaintext pre q s samp \
script select small spacer span strike strong style sub sup \
table tbody td textarea tfoot th thead title tr tt u ul \
var xml xmlns xmp

hypertext.attributes=\
abbr accept-charset accept accesskey action align alink \
allowtransparency alt archive axis background bgcolor border bordercolor bottommargin \
cellpadding cellspacing char charoff charset checked cite \
class classid clear codebase codetype color cols colspan \
compact content coords \
data datafld dataformatas datapagesize datasrc datetime \
declare defer dir disabled enctype event \
face for frame frameborder framespacing \
headers height href hreflang hspace http-equiv \
id ismap label lang language leftmargin link longdesc lowsrc \
marginwidth marginheight maxlength media method methods multiple \
name nohref noresize noshade nowrap \
object onblur onchange onclick ondblclick onfocus \
onkeydown onkeypress onkeyup onload onmousedown \
onmousemove onmouseover onmouseout onmouseup \
onreset onselect onsubmit onunload \
profile prompt readonly rel rev rightmargin rows rowspan rules \
scheme scope scrolling selected shape size span src standby start style \
summary tabindex target text title topmargin type usemap urn \
valign value valuetype version vlink vspace width \
text password checkbox radio submit reset \
file hidden image \
^data-

# As defined in "HTML5 differences from HTML4" Working Draft
# http://www.w3.org/TR/html5-diff/
html5.elements=\
address article aside audio base bdi canvas command details datalist dialog embed \
figure figcaption footer header hgroup keygen main mark menu meter nav output \
picture progress ruby rb rt rtc rp section source template track time video wbr

html5.attributes=\
allowfullscreen allowpaymentrequest async autocomplete autofocus autoplay \
controls contenteditable contextmenu crossorigin default dirname download draggable \
form formaction formenctype formmethod formnovalidate formtarget high kind \
list low loop manifest max muted min minlength nonce novalidate open optimum \
onabort onaddtrack onafterprint onauxclick onbeforeprint onbeforeunload \
oncancel oncanplay oncanplaythrough onclose oncopy oncuechange oncut \
ondrag ondragend ondragenter ondragexit ondragleave ondragover ondragstart ondrop ondurationchange \
onemptied onended onerror onenter onexit onhashchange oninput oninvalid \
onlanguagechange onloadeddata onloadedmetadata onloadend onloadstart \
onmessage onmouseenter onmouseleave onoffline ononline \
onpagehide onpageshow onpaste onpause onplay onplaying onprogress onpopstate \
onratechange onremovetrack onresize onrejectionhandled onresize \
onscroll onseeked onseeking onshow onstalled onstorage onsuspend ontimeupdate ontoggle \
onunhandledrejection onvolumechange onwaiting onwheel \
pattern placeholder poster preload \
referrerpolicy required reversed role sandbox scoped seamless sizes spellcheck srcdoc srclang srcset step \
translate typemustmatch wrap

keywordclass.hypertext=\
$(hypertext.elements) $(hypertext.attributes) $(html5.elements) $(html5.attributes) public !doctype

vxml.elements=\
assign audio block break catch choice clear disconnect else elseif \
emphasis enumerate error exit field filled form goto grammar help \
if initial link log menu meta noinput nomatch object option p paragraph \
param phoneme prompt property prosody record reprompt return s say-as \
script sentence subdialog submit throw transfer value var voice vxml

vxml.attributes=\
accept age alphabet anchor application base beep bridge category charset \
classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \
duration enctype event eventexpr expr expritem fetchtimeout finalsilence \
gender http-equiv id level maxage maxstale maxtime message messageexpr \
method mime modal mode name namelist next nextitem ph pitch range rate \
scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \
transferaudio type value variant version volume xml:lang

keywordclass.vxml=\
$(vxml.elements) $(vxml.attributes) public !doctype

# List from http://www.php.net/manual/en/reserved.php (updated for PHP 5)
# For a list with functions http://groups.google.com/group/scite-interest/web/extras
# All words should be lower case to ensure case insensitivity when comparing
keywordclass.php=\
and array as bool boolean break case cfunction class const continue declare \
default die directory do double echo else elseif empty enddeclare endfor \
endforeach endif endswitch endwhile eval exit extends false float for \
foreach function global goto if include include_once int integer isset list namespace \
new null object old_function or parent print real require require_once resource \
return static stdclass string switch true unset use var while xor \
abstract catch clone exception final implements interface php_user_filter \
private protected public this throw try \
__class__ __dir__ __file__ __function__ __line__ __method__ \
__namespace__ __sleep __wakeup

# Override keywordclass.php with another file if present
import phpfunctions

keywords.$(file.patterns.html)=$(keywordclass.hypertext)
# JavaScript keywords are possible inside embedded Javascript
keywords2.$(file.patterns.html)=$(keywordclass.javascript)
# VBScript keywords are possible inside embedded VBScript
keywords3.$(file.patterns.html)=$(keywordclass.vb)
# Python keywords are possible inside embedded Python
keywords4.$(file.patterns.html)=$(keywordclass.python)
# PHP keywords are possible inside embedded PHP
keywords5.$(file.patterns.html)=$(keywordclass.php)
# SGML / DTD keywords
keywords6.$(file.patterns.html)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

# START DocBook
docbook.elements42=\
abbrev abstract accel ackno acronym action address affiliation alt anchor \
answer appendix appendixinfo application area areaset areaspec arg article \
articleinfo artpagenums attribution audiodata audioobject author authorblurb \
authorgroup authorinitials beginpage bibliocoverage bibliodiv biblioentry \
bibliography bibliographyinfo biblioid bibliomisc bibliomixed bibliomset \
bibliorelation biblioset bibliosource blockinfo blockquote book bookinfo \
bridgehead callout calloutlist caption caution chapter chapterinfo citation \
citebiblioid citerefentry citetitle city classname classsynopsis classsynopsisinfo \
cmdsynopsis co collab collabname colophon colspec command computeroutput \
confdates confgroup confnum confsponsor conftitle constant constraint \
constraintdef constructorsynopsis contractnum contractsponsor contrib \
copyright coref corpauthor corpname country database date dedication \
destructorsynopsis edition editor email emphasis entry entrytbl envar \
epigraph equation errorcode errorname errortext errortype example \
exceptionname fax fieldsynopsis figure filename firstname firstterm \
footnote footnoteref foreignphrase formalpara funcdef funcparams \
funcprototype funcsynopsis funcsynopsisinfo function glossary glossaryinfo \
glossdef glossdiv glossentry glosslist glosssee glossseealso glossterm \
graphic graphicco group guibutton guiicon guilabel guimenu guimenuitem \
guisubmenu hardware highlights holder honorific htm imagedata imageobject \
imageobjectco important index indexdiv indexentry indexinfo indexterm \
informalequation informalexample informalfigure informaltable initializer \
inlineequation inlinegraphic inlinemediaobject interface interfacename \
invpartnumber isbn issn issuenum itemizedlist itermset jobtitle keycap \
keycode keycombo keysym keyword keywordset label legalnotice lhs lineage \
lineannotation link listitem iteral literallayout lot lotentry manvolnum \
markup medialabel mediaobject mediaobjectco member menuchoice methodname \
methodparam methodsynopsis mm modespec modifier ousebutton msg msgaud \
msgentry msgexplan msginfo msglevel msgmain msgorig msgrel msgset msgsub \
msgtext nonterminal note objectinfo olink ooclass ooexception oointerface \
option optional orderedlist orgdiv orgname otheraddr othercredit othername \
pagenums para paramdef parameter part partinfo partintro personblurb \
personname phone phrase pob postcode preface prefaceinfo primary primaryie \
printhistory procedure production productionrecap productionset productname \
productnumber programlisting programlistingco prompt property pubdate publisher \
publishername pubsnumber qandadiv qandaentry qandaset question quote refclass \
refdescriptor refentry refentryinfo refentrytitle reference referenceinfo \
refmeta refmiscinfo refname refnamediv refpurpose refsect1 refsect1info refsect2 \
refsect2info refsect3 refsect3info refsection refsectioninfo refsynopsisdiv \
refsynopsisdivinfo releaseinfo remark replaceable returnvalue revdescription \
revhistory revision revnumber revremark rhs row sbr screen screenco screeninfo \
screenshot secondary secondaryie sect1 sect1info sect2 sect2info sect3 sect3info \
sect4 sect4info sect5 sect5info section sectioninfo see seealso seealsoie \
seeie seg seglistitem segmentedlist segtitle seriesvolnums set setindex \
setindexinfo setinfo sgmltag shortaffil shortcut sidebar sidebarinfo simpara \
simplelist simplemsgentry simplesect spanspec state step street structfield \
structname subject subjectset subjectterm subscript substeps subtitle \
superscript surname sv symbol synopfragment synopfragmentref synopsis \
systemitem table tbody term tertiary tertiaryie textdata textobject tfoot \
tgroup thead tip title titleabbrev toc tocback tocchap tocentry tocfront \
toclevel1 toclevel2 toclevel3 toclevel4 toclevel5 tocpart token trademark \
type ulink userinput varargs variablelist varlistentry varname videodata \
videoobject void volumenum warning wordasword xref year

docbook.attributes=\
arch condition conformance id lang os remap role revision revisionflag security \
userlevel vendor xreflabel \
status label endterm linkend space width

keywordclass.docbook=\
$(docbook.elements42) $(docbook.attributes)

keywordclass.mako=$(keywordclass.hypertext)
keywords.$(file.patterns.mako)=$(keywordclass.hypertext)
# JavaScript keywords are possible inside embedded Javascript
keywords2.$(file.patterns.mako)=$(keywordclass.javascript)
# VBScript keywords are possible inside embedded VBScript
keywords3.$(file.patterns.mako)=$(keywordclass.vb)
# Python keywords are possible inside embedded Python
keywords4.$(file.patterns.mako)=$(keywordclass.python) include namespace inherit \
call doc text page endclass endexcept endfinally endfor endif endtry endwhile block
# PHP keywords are possible inside embedded PHP
keywords5.$(file.patterns.mako)=$(keywordclass.php)
# SGML / DTD keywords
keywords6.$(file.patterns.mako)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

# For Django's template language. Since Django seems to use the same .html extension
# as plain HTML, it is up to the user to integrate these keywords if desired.
keywordclass.django= not in autoescape with \
csrf_token cycle empty block endblock filter endfilter for endfor firstof \
if endif ifchanged endifchanged ifequal endifequal include load now regroup spaceless \
endspaceless ssi url widthratio add addslashes capfirst center cut date \
default default_if_none dictsort dictsortreversed divisibleby escape escapejs \
filesizeformat first fix_ampersands float_format force_escape get_digit \
iriencode join last length length_is linebreaks linebreaksbr linenumbers ljust \
lower make_list phone2numeric pluralize pprint random removetags rjust safe \
safeseq slice slugify stringformat striptags time timesince timeuntil title \
truncatewords truncatewords_html unordered_list upper urlencode urlize \
urlizetrunc wordcount wordwrap yesno apnumber intcomma intword ordinal \
naturalday lorem

keywords.$(file.patterns.docbook)=$(keywordclass.docbook)
keywords6.$(file.patterns.docbook)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION
# END DocBook

word.characters.$(file.patterns.html)=$(chars.alpha)$(chars.numeric)$(chars.accented)_-$
comment.stream.start.hypertext=<!--
comment.stream.end.hypertext=-->
comment.block.hypertext=//~
comment.block.at.line.start.hypertext=1

comment.box.start.xml=
comment.stream.start.xml=

# No keyword for xml, as it accepts any keyword
keywords.$(file.patterns.xml)=
# SGML / DTD keywords
keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-

keywords.$(file.patterns.vxml)=$(keywordclass.vxml)
keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)



word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-

# Define the background colours for SGML and each scripting language
colour.hypertext.sgml.back=back:#EFEFFF
colour.hypertext.server.javascript.back=back:#DFDF7F
colour.hypertext.client.vbs.back=back:#EFEFFF
colour.hypertext.server.vbs.back=back:#CFCFEF
colour.hypertext.client.python.back=back:#EFFFEF
colour.hypertext.server.python.back=back:#CFEFCF
colour.hypertext.server.php.back=back:#FFF8F8

# HTML and XML share lexing code so use the same style numbers
# Hypertext Markup Language

# Text
style.hypertext.0=
# Tags
style.hypertext.1=fore:$(col.steel)
# Unknown Tags
style.hypertext.2=fore:$(col.silver)
# Attributes
style.hypertext.3=fore:$(col.puselo)
# Unknown Attributes
style.hypertext.4=fore:$(col.pusehi)
# Numbers
style.hypertext.5=fore:$(col.bluehi)
# Double quoted strings
style.hypertext.6=fore:$(col.redlo)
# Single quoted strings
style.hypertext.7=fore:$(col.redhi)
# Other inside tag, including space and '='
style.hypertext.8=fore:$(col.silver)
# Comment
style.hypertext.9=fore:$(col.gray)
# Entities
style.hypertext.10=fore:$(col.orangelo)
# XML style tag ends '/>'
style.hypertext.11=fore:$(col.steel)
# XML identifier start '<?'
style.hypertext.12=fore:$(col.purplelo)
# XML identifier end '?>'
style.hypertext.13=fore:$(col.purplelo)
# Internal state which should never be visible
style.hypertext.14=
# ASP <% ... %>
style.hypertext.15=fore:$(col.purplehi)
# ASP <% ... %>
style.hypertext.16=fore:$(col.purplehi)
# CDATA
style.hypertext.17=fore:$(col.pinklo)
# PHP
style.hypertext.18=fore:$(col.purplelo)
# Unquoted values
style.hypertext.19=
# JSP Comment <%-- ... --%>
style.hypertext.20=fore:$(col.gray)
# SGML tags <! ... >
style.hypertext.21=fore:$(col.purplehi)
# SGML command
style.hypertext.22=
# SGML 1st param
style.hypertext.23=
# SGML double string
style.hypertext.24=fore:$(col.redlo)
# SGML single string
style.hypertext.25=fore:$(col.redhi)
# SGML error
style.hypertext.26=fore:$(col.white),back:$(col.redhi)
# SGML special (#XXXX type)
style.hypertext.27=fore:$(col.orangehi)
# SGML entity
style.hypertext.28=fore:$(col.orangelo)
# SGML comment
style.hypertext.29=fore:$(col.gray)
# SGML first parameter - lexer internal. It is an error if any text is in this style.
style.hypertext.30=
# SGML block
style.hypertext.31=
# Some reasonable background colours found in the default Windows palette
# Off White #FFFBF0    Light green #C0DCC0    Light Blue #A6CAF0

# Embedded Javascript
fontcolour.js=
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=
# JS Default
style.hypertext.41=
# JS Comment
style.hypertext.42=fore:$(col.gray)
# JS Line Comment
style.hypertext.43=fore:$(col.gray)
# JS Doc comment
style.hypertext.44=fore:$(col.steel)
# JS Number
style.hypertext.45=fore:$(col.bluehi)
# JS Word
style.hypertext.46=
# JS Keyword
style.hypertext.47=fore:$(col.bluelo)
# JS Double quoted string
style.hypertext.48=fore:$(col.redlo)
# JS Single quoted string
style.hypertext.49=fore:$(col.redhi)
# JS Symbols
style.hypertext.50=fore:$(col.silver)
# JavaScript EOL
style.hypertext.51=
# JavaScript RegEx
style.hypertext.52=fore:$(col.orangelo)

# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=
# JS Default
style.hypertext.56=
# JS Comment
style.hypertext.57=fore:$(col.gray)
# JS Line Comment
style.hypertext.58=fore:$(col.gray)
# JS Doc comment
style.hypertext.59=fore:$(col.steel)
# JS Number
style.hypertext.60=fore:$(col.bluehi)
# JS Word
style.hypertext.61=
# JS Keyword
style.hypertext.62=fore:$(col.bluelo)
# JS Double quoted string
style.hypertext.63=fore:$(col.redlo)
# JS Single quoted string
style.hypertext.64=fore:$(col.redhi)
# JS Symbols
style.hypertext.65=fore:$(col.silver)
# JavaScript EOL
style.hypertext.66=
# JavaScript RegEx
style.hypertext.67=fore:$(col.orangelo)

# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=
# Comment
style.hypertext.72=fore:$(col.gray)
# Number
style.hypertext.73=fore:$(col.bluehi)
# KeyWord
style.hypertext.74=fore:$(col.bluelo)
# String
style.hypertext.75=fore:$(col.redlo)
# Identifier
style.hypertext.76=
# Unterminated string
style.hypertext.77=fore:$(col.white),back:$(col.redhi)

# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=
# Comment
style.hypertext.82=fore:$(col.gray)
# Number
style.hypertext.83=fore:$(col.bluehi)
# KeyWord
style.hypertext.84=fore:$(col.bluelo)
# String
style.hypertext.85=fore:$(col.redlo)
# Identifier
style.hypertext.86=
# Unterminated string
style.hypertext.87=fore:$(col.white),back:$(col.redhi)

# Embedded Python
style.hypertext.90=
style.hypertext.91=
# Comment
style.hypertext.92=fore:$(col.gray)
# Number
style.hypertext.93=fore:$(col.bluehi)
# String
style.hypertext.94=fore:$(col.redlo)
# Single quoted string
style.hypertext.95=fore:$(col.redhi)
# Keyword
style.hypertext.96=fore:$(col.bluelo)
# Triple quotes
style.hypertext.97=fore:$(col.orangehi)
# Triple double quotes
style.hypertext.98=fore:$(col.orangelo)
# Class name definition
style.hypertext.99=fore:$(col.cyanlo)
# Function or method name definition
style.hypertext.100=fore:$(col.puselo)
# Operators
style.hypertext.101=fore:$(col.silver)
# Identifiers
style.hypertext.102=

# PHP complex variable
style.hypertext.104=

# ASP Python
style.hypertext.105=
style.hypertext.106=
# Comment
style.hypertext.107=fore:$(col.gray)
# Number
style.hypertext.108=fore:$(col.bluehi)
# String
style.hypertext.109=fore:$(col.redlo)
# Single quoted string
style.hypertext.110=fore:$(col.redhi)
# Keyword
style.hypertext.111=fore:$(col.bluelo)
# Triple quotes
style.hypertext.112=fore:$(col.orangehi)
# Triple double quotes
style.hypertext.113=fore:$(col.orangelo)
# Class name definition
style.hypertext.114=fore:$(col.cyanlo)
# Function or method name definition
style.hypertext.115=fore:$(col.puselo)
# Operators
style.hypertext.116=fore:$(col.silver)
# Identifiers
style.hypertext.117=

# PHP
# Default
style.hypertext.118=
# Double quoted String
style.hypertext.119=fore:$(col.redlo)
# Single quoted string
style.hypertext.120=fore:$(col.redhi)
# Keyword
style.hypertext.121=fore:$(col.bluelo)
# Number
style.hypertext.122=fore:$(col.bluehi)
# Variable
style.hypertext.123=fore:$(col.yellowhi)
# Comment
style.hypertext.124=fore:$(col.gray)
# One line comment
style.hypertext.125=fore:$(col.gray)
# PHP variable in double quoted string
style.hypertext.126=fore:$(col.orangelo)
# PHP operator
style.hypertext.127=fore:$(col.silver)

# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

# Default
style.xml.0=
# Tags
style.xml.1=fore:$(col.steel)
# Unknown Tags
style.xml.2=fore:$(col.silver)
# Attributes
style.xml.3=fore:$(col.puselo)
# Unknown Attributes
style.xml.4=fore:$(col.pusehi)
# Numbers
style.xml.5=fore:$(col.bluehi)
# Double quoted strings
style.xml.6=fore:$(col.redlo)
# Single quoted strings
style.xml.7=fore:$(col.redhi)
# Other inside tag, including space and '='
style.xml.8=fore:$(col.silver)
# Comment
style.xml.9=fore:$(col.gray)
# Entities
style.xml.10=fore:$(col.orangelo)
# XML style tag ends '/>'
style.xml.11=fore:$(col.steel)
# XML identifier start '<?'
style.xml.12=fore:$(col.purplelo)
# XML identifier end '?>'
style.xml.13=fore:$(col.purplelo)
# CDATA
style.xml.17=fore:$(col.pinklo)
# Question
style.xml.18=
# Unquoted Value
style.xml.19=
# SGML tags <! ... >
style.xml.21=fore:$(col.purplehi)
# SGML command
style.xml.22=
# SGML 1st param
style.xml.23=
# SGML double string
style.xml.24=fore:$(col.redlo)
# SGML single string
style.xml.25=fore:$(col.redhi)
# SGML error
style.xml.26=fore:$(col.white),back:$(col.redhi)
# SGML special (#XXXX type)
style.xml.27=fore:$(col.orangehi)
# SGML entity
style.xml.28=fore:$(col.orangelo)
# SGML comment
style.xml.29=fore:$(col.gray)
# SGML block
style.xml.31=

### markdown

# Define SciTE settings for Markdown files.

file.patterns.markdown=*.md;*.markdown

filter.markdown=Markdown (md markdown)|$(file.patterns.markdown)|
*filter.markdown=$(filter.markdown)

lexer.$(file.patterns.markdown)=markdown

*language.markdown=Markdo&wn|markdown||

# SCE_MARKDOWN_DEFAULT: Regular text
style.markdown.0=

# SCE_MARKDOWN_LINE_BEGIN: Special, e.g. end-of-line codes if enabled
style.markdown.1=

# SCE_MARKDOWN_STRONG1: "**" - Strong emphasis (bold)
style.markdown.2=fore:$(col.redhi)
# SCE_MARKDOWN_STRONG2: "__" - Strong emphasis (bold)
style.markdown.3=fore:$(col.redhi)

# SCE_MARKDOWN_EM1: '*' - Emphasis (italic)
style.markdown.4=fore:$(col.yellowhi)
# SCE_MARKDOWN_EM2: '_' - Emphasis (italic)
style.markdown.5=fore:$(col.yellowhi)

# SCE_MARKDOWN_HEADER1: "#" - Level-one header
style.markdown.6=fore:$(col.bluelo)
# SCE_MARKDOWN_HEADER2: "##" - Level-two header
style.markdown.7=fore:$(col.bluehi)
# SCE_MARKDOWN_HEADER3: "###" - Level-three header
style.markdown.8=fore:$(col.bluelo)
# SCE_MARKDOWN_HEADER4: "####" - Level-four header
style.markdown.9=fore:$(col.bluehi)
# SCE_MARKDOWN_HEADER5: "#####" - Level-five header
style.markdown.10=fore:$(col.bluelo)
# SCE_MARKDOWN_HEADER6: "######" - Level-six header
style.markdown.11=fore:$(col.bluehi)

# SCE_MARKDOWN_PRECHAR: Prechar (up to three indent spaces, e.g. for a second-level list)
style.markdown.12=

# SCE_MARKDOWN_ULIST_ITEM: "- ", "* ", "+ " - Unordered list item
style.markdown.13=fore:$(col.cyanhi)
# SCE_MARKDOWN_OLIST_ITEM: "1. " to "9. ", "#. " - Ordered list item
style.markdown.14=fore:$(col.cyanlo)

# SCE_MARKDOWN_BLOCKQUOTE: "> " - Block quote
style.markdown.15=fore:$(col.yellowlo)

# SCE_MARKDOWN_STRIKEOUT: "~~" - Strikeout
style.markdown.16=fore:$(col.gray)

# SCE_MARKDOWN_HRULE: "---", "***", "___" - Horizontal rule
style.markdown.17=fore:$(col.silver)

# SCE_MARKDOWN_LINK: "[]", "![]" - Link or image
style.markdown.18=fore:$(col.pinkhi)

# SCE_MARKDOWN_CODE: '`' - Inline code
style.markdown.19=fore:$(col.steel)
# SCE_MARKDOWN_CODE2: "``" - Inline code (quotes code containing a single backtick)
style.markdown.20=fore:$(col.steel)
# SCE_MARKDOWN_CODEBK: "~~~" - Code block
style.markdown.21=fore:$(col.steel)

### others

# Define SciTE settings for other simple files.

file.patterns.props=*.properties;*.session;*.ini;*.inf;*.url;*.cfg;*.cnf;*.aut
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;Makefile;*.mak;configure
file.patterns.indent=*.indent

*source.patterns.props=$(file.patterns.props);
*source.patterns.batch=$(file.patterns.batch);
*source.patterns.diff=$(file.patterns.diff);
*source.patterns.make=$(file.patterns.make);*.iface;

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

*filter.properties=$(filter.properties)
*filter.text=$(filter.text)

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff
lexer.$(file.patterns.indent)=indent

*language.batch=&Batch|bat||
*language.difference=&Difference|diff||
*language.errorlist=&Errorlist|err||
*language.properties=&Properties|properties||
*language.makefile=&Makefile|mak|$(keyMake)|
*language._text=Text|txt|$(keyText)|
*language.indent=Indent|indent|$(keyIndent)|

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000

# Properties styles

# Default
style.props.0=
# Comment
style.props.1=fore:$(col.gray)
# Section
style.props.2=fore:$(col.bluelo)
# Assignment operator
style.props.3=fore:$(col.silver)
# Default value (@)
style.props.4=fore:$(col.yellowlo)
# Key
style.props.5=fore:$(col.pusehi)
comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF

# Batch styles

# List from http://www.easydos.com/dosindex.html and https://sourceforge.net/p/scintilla/bugs/1686/
# I limit here the commands to those built in command.com, ie. I don't list external Dos commands
# if [no] (test) (command) -- test is EXIST (filename) | (string1)==(string2) | ERRORLEVEL (number)
# for %%(variable) IN (set) DO (command) -- variable is [a-zA-Z] -- eg for %%X in (*.txt) do type %%X
# Also includes device names.
keywordclass.batch=\
assoc aux break call cd chcp chdir choice cls cmdextversion \
color com1 com2 com3 com4 con copy ctty date defined \
del dir do dpath echo else endlocal erase errorlevel exist \
exit for ftype goto if in lpt1 lpt2 lpt3 lpt4 md mkdir move \
not nul path pause popd prompt prn pushd rd rem ren \
rename rmdir set setlocal shift start time title type ver \
verify vol
keywords.$(file.patterns.batch)=$(keywordclass.batch)

# Optional list of external commands to highlight in style 5.
# If not set all commands are highlighted in style 5.
#keywords2.$(file.patterns.batch)=append attrib chkdsk comp diskcomp

# Default
style.batch.0=
# Comment (rem or ::)
style.batch.1=fore:$(col.gray)
# Keywords
style.batch.2=fore:$(col.bluelo)
# Label (line beginning with ':')
style.batch.3=fore:$(col.puselo)
# Hide command character ('@')
style.batch.4=fore:$(col.silver)
# External commands
style.batch.5=
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=fore:$(col.greenhi)
# Operator: * ? < > |
style.batch.7=fore:$(col.silver)

comment.block.batch=REM ~

# Makefile styles

# Default
style.makefile.0=
# Comment: #
style.makefile.1=fore:$(col.gray)
# Pre-processor or other comment: !
style.makefile.2=fore:$(col.steel)
# Variable: $(x)
style.makefile.3=fore:$(col.greenhi)
# Operator
style.makefile.4=fore:$(col.silver)
# Target
style.makefile.5=fore:$(col.puselo)
# Error
style.makefile.9=fore:$(col.white),back:$(col.redhi)

comment.block.makefile=#~

# Difference styles

# Default
style.diff.0=
# Comment (part before "diff ..." or "--- ..." and , Only in ..., Binary file...)
style.diff.1=fore:$(col.gray)
# Command (diff ...)
style.diff.2=fore:$(col.steel)
# Source file (--- ...) and Destination file (+++ ...)
style.diff.3=fore:$(col.pusehi)
# Position setting (@@ ...)
style.diff.4=fore:$(col.puselo)
# Line removal (-...)
style.diff.5=fore:$(col.redlo)
# Line addition (+...)
style.diff.6=fore:$(col.greenlo)
# Line change (!...)
style.diff.7=fore:$(col.yellowlo)
# Patch add (++...)
style.diff.8=fore:$(col.greenhi)
# Patch delete (+-...)
style.diff.9=fore:$(col.yellowhi)
# Removed patch add (-+...)
style.diff.10=fore:$(col.yellowhi)
# Removed patch delete (--...)
style.diff.11=fore:$(col.redhi)

### perl, bash & awk

# Define SciTE settings for Perl, Bash, and AWK files.

file.patterns.perl=*.pl;*.pm;*.pod
file.patterns.bash=*.sh;*.bsh;configure;*.ksh
file.patterns.awk=*.awk

*source.patterns.perl=$(file.patterns.perl);
*source.patterns.bash=$(file.patterns.bash);

shbang.perl=pl
shbang.sh=sh
shbang.bash=bash

shbang.gawk=awk
shbang.nawk=awk
shbang.mawk=awk

filter.perl=Perl (pl pm)|$(file.patterns.perl)|
filter.bash=Bash (sh bsh)|$(file.patterns.bash)|
filter.awk=GAWK  (awk)|$(file.patterns.awk)|

*filter.perl=$(filter.perl)
*filter.bash=$(filter.bash)

*language.perl=Pe&rl|pl||
*language.shell=Shell|sh||

lexer.$(file.patterns.perl)=perl
lexer.$(file.patterns.bash)=bash
lexer.$(file.patterns.awk)=perl

keywords.$(file.patterns.perl)=\
NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \
BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \
alarm and atan2 bind binmode bless caller chdir chmod chomp chop \
chown chr chroot close closedir cmp connect continue cos crypt \
dbmclose dbmopen defined delete die do dump each else elsif endgrent \
endhostent endnetent endprotoent endpwent endservent eof eq eval \
exec exists exit exp fcntl fileno flock for foreach fork format \
formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \
gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \
getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \
getpwent getpwnam getpwuid getservbyname getservbyport getservent \
getsockname getsockopt glob gmtime goto grep gt hex if index \
int ioctl join keys kill last lc lcfirst le length link listen \
local localtime lock log lstat lt map mkdir msgctl msgget msgrcv \
msgsnd my ne next no not oct open opendir or ord our pack package \
pipe pop pos print printf prototype push quotemeta qu \
rand read readdir readline readlink readpipe recv redo \
ref rename require reset return reverse rewinddir rindex rmdir \
scalar seek seekdir select semctl semget semop send setgrent \
sethostent setnetent setpgrp setpriority setprotoent setpwent \
setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \
sin sleep socket socketpair sort splice split sprintf sqrt srand \
stat study sub substr symlink syscall sysopen sysread sysseek \
system syswrite tell telldir tie tied time times truncate \
uc ucfirst umask undef unless unlink unpack unshift untie until \
use utime values vec wait waitpid wantarray warn while write \
xor \
given when default break say state UNITCHECK __SUB__ fc

keywords.$(file.patterns.awk)=\
BEGIN END \
if else while do for in break continue delete exit function return \
print printf sprintf \
system close getline next nextfile fflush \
atan2 cos exp int log rand sin sqrt srand \
asort asorti gensub sub gsub index length match split \
strtonum substr tolower toupper \
mktime strftime systime \
and compl lshift or rshift xor \
bindtextdomain dcgettext dcngettext \
ARGC ARGIND ARGV BINMODE CONVFMT ENVIRON ERRNO FIELDWIDTHS \
FILENAME FNR FS IGNORECASE LINT NF NR OFMT OFS ORS PROCINFO \
RS RT RSTART RLENGTH SUBSEP TEXTDOMAIN

comment.block.awk=#~
block.start.$(file.patterns.awk)=10 {
block.end.$(file.patterns.awk)=10 }

word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.perl=#~
block.start.$(file.patterns.perl)=10 {
block.end.$(file.patterns.perl)=10 }

colour.perl.heredoc=$(colour.embedded.comment)

#fold.perl.package=1
#fold.perl.pod=1

# generic keywords
bash_keywords1=alias \
ar asa awk banner basename bash bc bdiff break \
bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \
clear cmp col comm compress continue cp cpio crypt \
csplit ctags cut date dc dd declare deroff dev df diff diff3 \
dircmp dirname do done du echo ed egrep elif else env \
esac eval ex exec exit expand export expr false fc \
fgrep fi file find fmt fold for function functions \
getconf getopt getopts grep gres hash head help \
history iconv id if in integer jobs join kill local lc \
let line ln logname look ls m4 mail mailx make \
man mkdir more mt mv newgrp nl nm nohup ntps od \
pack paste patch pathchk pax pcat perl pg pr print \
printf ps pwd read readonly red return rev rm rmdir \
sed select set sh shift size sleep sort spell \
split start stop strings strip stty sum suspend \
sync tail tar tee test then time times touch tr \
trap true tsort tty type typeset ulimit umask unalias \
uname uncompress unexpand uniq unpack unset until \
uudecode uuencode vi vim vpax wait wc whence which \
while who wpaste wstart xargs zcat

# additional keywords from coreutils
bash_keywords2=chgrp chown chroot dir dircolors \
factor groups hostid install link md5sum mkfifo \
mknod nice pinky printenv ptx readlink seq \
sha1sum shred stat su tac unlink users vdir whoami yes

keywords.$(file.patterns.bash)=$(bash_keywords1) $(bash_keywords2)

word.characters.$(file.patterns.bash)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.bash=#~

colour.bash.heredoc=$(colour.embedded.comment)

# Perl styles
# The perl styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Perl lexer - not because this is a good way to display Perl.
style.perl.32=
# White space
style.perl.0=
# Error
style.perl.1=fore:$(col.white),back:$(col.redhi)
# Comment
style.perl.2=fore:$(col.gray)
# POD: = at beginning of line
style.perl.3=
# Number
style.perl.4=fore:$(col.bluehi)
# Keyword
style.perl.5=fore:$(col.bluelo)
# Double quoted string
style.perl.6=fore:$(col.redlo)
# Single quoted string
style.perl.7=fore:$(col.redhi)
# Symbols / Punctuation. Currently not used by LexPerl.
style.perl.8=
# Preprocessor. Currently not used by LexPerl.
style.perl.9=
# Operators
style.perl.10=fore:$(col.silver)
# Identifiers (functions, etc.)
style.perl.11=
# Scalars: $var
style.perl.12=fore:$(col.yellowhi)
# Array: @var
style.perl.13=fore:$(col.orangeih)
# Hash: %var
style.perl.14=fore:$(col.cyanhi)
# Symbol table: *var
style.perl.15=fore:$(col.pusehi)
# SCE_PL_VARIABLE_INDEXER allocated but unused
style.perl.16=
# Regex: /re/ or m{re}
style.perl.17=fore:$(col.orangelo)
# Substitution: s/re/ore/
style.perl.18=fore:$(col.purplehi)
# Long Quote (qq, qr, qw, qx) -- obsolete: replaced by qq, qx, qr, qw
style.perl.19=
# Back Ticks
style.perl.20=fore:$(col.redhi)
# Data Section: __DATA__ or __END__ at beginning of line
style.perl.21=fore:$(col.pinklo)
# Here-doc (delimiter)
style.perl.22=
# Here-doc (single quoted, q)
style.perl.23=
# Here-doc (double quoted, qq)
style.perl.24=
# Here-doc (back ticks, qx)
style.perl.25=
# Single quoted string, generic
style.perl.26=fore:$(col.redhi)
# qq = Double quoted string
style.perl.27=$(style.perl.6)
# qx = Back ticks
style.perl.28=$(style.perl.20)
# qr = Regex
style.perl.29=$(style.perl.17)
# qw = Array
style.perl.30=$(style.perl.13)
# POD: verbatim paragraphs
style.perl.31=
# subroutine prototype
style.perl.40=
# format identifier
style.perl.41=
# format body
style.perl.42=
# translation: tr{}{} y{}{}
style.perl.44=

# Double quoted string (interpolated variable)
style.perl.43=fore:$(col.orangelo)
# Regex: /re/ or m{re} (interpolated variable)
style.perl.54=fore:$(col.yellowlo)
# Substitution: s/re/ore/ (interpolated variable)
style.perl.55=fore:$(col.pinklo)
# Back Ticks (interpolated variable)
style.perl.57=fore:$(col.orangelo)
# Here-doc (double quoted, qq) (interpolated variable)
style.perl.61=
# Here-doc (back ticks, qx) (interpolated variable)
style.perl.62=
# qq = Double quoted string (interpolated variable)
style.perl.64=
# qx = Back ticks (interpolated variable)
style.perl.65=
# qr = Regex (interpolated variable)
style.perl.66=

# Bash styles
# The bash styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Bash lexer - not because this is a good way to display Bash.
style.bash.32=
# White space
style.bash.0=
# Error
style.bash.1=fore:$(col.white),back:$(col.redhi)
# Comment
style.bash.2=fore:$(col.gray)
# Number
style.bash.3=fore:$(col.bluehi)
# Keyword
style.bash.4=fore:$(col.bluelo)
# Double quoted string
style.bash.5=fore:$(col.redlo)
# Single quoted string
style.bash.6=fore:$(col.redlo)
# Operators
style.bash.7=fore:$(col.silver)
# Identifiers (functions, etc.)
style.bash.8=
# Scalars: $var
style.bash.9=fore:$(col.puselo)
# Parameter expansion: ${var}
style.bash.10=fore:$(col.redhi)
# Back Ticks
style.bash.11=fore:$(col.orangelo)
# Here-doc (delimiter)
style.bash.12=
# Here-doc (single quoted, q)
style.bash.13=

### python

# Define SciTE settings for Python files.

file.patterns.py=*.py;*.pyw;*.pyx;*.pxd;*.pxi
file.patterns.scons=SConstruct;SConscript

*source.patterns.python=$(file.patterns.py);

shbang.python=py

filter.python=Python (py pyw)|$(file.patterns.py)|

*filter.python=$(filter.python)

lexer.$(file.patterns.py)=python
lexer.$(file.patterns.scons)=python

*language.python=Pytho&n|py||

keywordclass.python2=and as assert break class continue def del elif \
else except exec finally for from global if import in is lambda not \
or pass print raise return try while with yield

keywordclass.python3=False None True and as assert break class continue \
def del elif else except finally for from global if import in is lambda \
nonlocal not or pass raise return try while with yield

keywordclass.python=$(keywordclass.python2)

# Extra keywords for cython
keywordclass.cython=cdef cimport cpdef

keywords.$(file.patterns.py)=$(keywordclass.python) $(keywordclass.cython)
keywords.$(file.patterns.scons)=$(keywordclass.python)

# If you uncomment the 3 lines below,
# and put some words after "keywordclass2.python=",
# those words will be styled by style.python.14

#keywordclass2.python=
#keywords2.$(file.patterns.py)=$(keywordclass2.python)
#keywords2.$(file.patterns.scons)=$(keywordclass2.python)

# Use 2 sets of substyles to highlight standard library modules and
# imports from the future.
# Additional identifier sets can be added by incrementing the  next
# line's value and adding extra definitions similar to below.
substyles.python.11=2

substylewords.11.1.$(file.patterns.py)=\
__main__ _dummy_thread _thread abc aifc argparse \
array ast asynchat asyncio asyncore atexit audioop \
base64 bdb binascii binhex bisect builtins bz2 \
calendar cgi cgitb chunk cmath cmd code codecs \
codeop collections colorsys compileall concurrent \
configparser contextlib copy copyreg crypt csv \
ctypes curses datetime dbm decimal difflib dis \
distutils dummy_threading email ensurepip enum \
errno faulthandler fcntl filecmp fileinput fnmatch \
formatter fpectl fractions ftplib functools gc getopt \
getpass gettext glob grp gzip hashlib heapq hmac \
html http http imaplib imghdr importlib inspect io \
ipaddress itertools json keyword linecache locale \
logging lzma macpath mailbox mailcap marshal math \
mimetypes mmap modulefinder msilib msvcrt \
multiprocessing netrc nis nntplib numbers operator \
os os ossaudiodev parser pathlib pdb pickle \
pickletools pipes pkgutil platform plistlib poplib posix \
pprint pty pwd py_compile pyclbr queue quopri \
random re readline reprlib resource rlcompleter runpy \
sched select selectors shelve shlex shutil signal site \
smtpd smtplib sndhdr socket socketserver spwd \
sqlite3 ssl stat statistics string stringprep struct \
subprocess sunau symbol symtable sys sysconfig \
syslog tabnanny tarfile telnetlib tempfile termios \
textwrap threading time timeit tkinter token \
tokenize trace traceback tracemalloc tty turtle \
types unicodedata unittest urllib uu uuid venv warnings \
wave weakref webbrowser winreg winsound wsgiref \
xdrlib xml xmlrpc zipfile zipimport zlib
style.python.11.1=

substylewords.11.2.$(file.patterns.py)=__future__ \
with_statement unicode_literals print_function
style.python.11.2=

#~ statement.indent.$(file.patterns.py)=10 :
statement.indent.$(file.patterns.py)=5 class def elif else except finally \
for if try while with

statement.lookback.$(file.patterns.py)=0
block.start.$(file.patterns.py)=
block.end.$(file.patterns.py)=

view.indentation.examine.*.py=2

tab.timmy.whinge.level=1

#fold.quotes.python=1

comment.block.python=#~

# Python styles
# White space
style.python.0=
# Comment
style.python.1=fore:$(col.gray)
# Number
style.python.2=fore:$(col.bluehi)
# String
style.python.3=fore:$(col.redlo)
# Single quoted string
style.python.4=fore:$(col.redhi)
# Keyword
style.python.5=fore:$(col.bluelo)
# Triple quotes
style.python.6=fore:$(col.orangehi)
# Triple double quotes
style.python.7=fore:$(col.orangelo)
# Class name definition
style.python.8=fore:$(col.cyanlo)
# Function or method name definition
style.python.9=fore:$(col.puselo)
# Operators
style.python.10=fore:$(col.silver)
# Identifiers
style.python.11=
# Comment-blocks
style.python.12=fore:$(col.gray)
# End of line where string is not closed
style.python.13=
# Highlighted identifiers
style.python.14=
# Decorators
style.python.15=fore:$(col.steel)
# F-String
style.python.16=fore:$(col.orangelo)
# Single quoted f-string
style.python.17=fore:$(col.orangehi)
# Triple quoted f-string
style.python.18=fore:$(col.yellowhi)
# Triple double quoted f-string
style.python.19=fore:$(col.yellowlo)
